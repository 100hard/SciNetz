services:
  api:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      - UVICORN_PORT=8000
      - OPENAI_API_KEY=${OPENAI_API_KEY:?OPENAI_API_KEY not set}
    ports:
      - "8000:8000"
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    depends_on:
      neo4j:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    working_dir: /app
    command: ["npm", "run", "dev", "--", "--hostname", "0.0.0.0", "--port", "3000"]
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://api:8000

  neo4j:
    image: neo4j:5-community
    environment:
      - NEO4J_AUTH=neo4j/neo4jpassword
      - NEO4J_PLUGINS=["apoc"]
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - ./neo4j/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "neo4jpassword", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

volumes:
  neo4j_data:
  frontend_node_modules:
