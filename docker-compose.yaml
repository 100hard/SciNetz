services:
  api:
    build:
      context: .
      dockerfile: backend/Dockerfile
    env_file:
      - .env
    environment:
      - UVICORN_PORT=8000
      - OPENAI_API_KEY=${OPENAI_API_KEY:?OPENAI_API_KEY not set}
      - EXPORT_STORAGE_ENDPOINT=${EXPORT_STORAGE_ENDPOINT:-minio:9000}
      - EXPORT_STORAGE_ACCESS_KEY=${EXPORT_STORAGE_ACCESS_KEY:-minioadmin}
      - EXPORT_STORAGE_SECRET_KEY=${EXPORT_STORAGE_SECRET_KEY:-minioadmin123}
      - EXPORT_STORAGE_SECURE=${EXPORT_STORAGE_SECURE:-false}
      - EXPORT_STORAGE_PUBLIC_ENDPOINT=${EXPORT_STORAGE_PUBLIC_ENDPOINT:-http://localhost:9000}
      - EXPORT_TOKEN_SECRET=${EXPORT_TOKEN_SECRET:-dev-export-token-secret}
      - NEXT_PUBLIC_GOOGLE_CLIENT_ID=${NEXT_PUBLIC_GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - SCINETS_AUTH_GOOGLE_CLIENT_IDS=${SCINETS_AUTH_GOOGLE_CLIENT_IDS:-}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    ports:
      - "8000:8000"
    volumes:
      - ./config.yaml:/app/config.yaml:ro
      - scinets_api_data:/app/data
    depends_on:
      neo4j:
        condition: service_healthy
      minio:
        condition: service_healthy
      mailhog:
        condition: service_started

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - .env
    working_dir: /app
    command: ["npm", "run", "dev", "--", "--hostname", "0.0.0.0", "--port", "3000"]
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_GOOGLE_CLIENT_ID=${NEXT_PUBLIC_GOOGLE_CLIENT_ID}

  neo4j:
    image: neo4j:5-community
    environment:
      - NEO4J_AUTH=neo4j/neo4jpassword
      - NEO4J_PLUGINS=["apoc"]
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - ./neo4j/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "neo4jpassword", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${EXPORT_STORAGE_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${EXPORT_STORAGE_SECRET_KEY:-minioadmin123}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 20s

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  neo4j_data:
  frontend_node_modules:
  minio_data:
  scinets_api_data:
